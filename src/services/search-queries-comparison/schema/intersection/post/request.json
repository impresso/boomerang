{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/impresso/impresso-middle-layer/tree/master/src/services/search-queries-comparison/schema/intersection/post/request.json",
  "description": "Request payload for POST /search-queries-comparison/intersection",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "queries": {
      "type": "array",
      "minItems": 2,
      "items": {
        "$ref": "#/definitions/search_query"
      },
      "description": "Queries to find intersection of"
    },
    "group_by": {
      "type": "string",
      "description": "Group intersection items by this value"
    },
    "order_by": {
      "type": "string",
      "description": "Order intersection items by this value"
    },
    "limit": {
      "type": "integer",
      "description": "Limit to this many items",
      "default": 10,
      "minimum": 1,
      "maximum": 10000
    },
    "offset": {
      "type": "integer",
      "description": "Skip this many items",
      "minimum": 0
    },
    "page": {
      "type": "integer",
      "description": "Display N-th page (using 'limit' as the number of items in the page)",
      "minimum": 1
    }
  },
  "definitions": {
    "search_query": {
      "type": "object",
      "description": "Search query parameters",
      "additionalProperties": false,
      "properties": {
        "facets": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Defined in 'SOLR_FACETS'"
          }
        },
        "filters": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/filter"
          }
        }
      },
      "required": [
        "filters"
      ]
    },
    "filter": {
      "type": "object",
      "description": "A single filter criteria",
      "additionalProperties": false,
      "properties": {
        "context": {
          "type": "string",
          "enum": ["include", "exclude"],
          "default": "include"
        },
        "op": {
          "type": "string",
          "enum": ["AND", "OR"],
          "default": "OR"
        },
        "type": {
          "type": "string",
          "description": "Possible values are in 'search.validators:eachFilterValidator.type.choices'"
        },
        "precision": {
          "type": "string",
          "enum": ["fuzzy", "soft", "exact", "partial"],
          "default": "exact"
        },
        "q": {
          "type": "string",
          "minLength": 2,
          "maxLength": 500
        },
        "daterange": {
          "type": "string",
          "pattern": "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z TO \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z"
        },
        "uids": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    }
  },
  "required": [
    "queries"
  ]
}